head	1.10;
access;
symbols;
locks; strict;
comment	@# @;


1.10
date	2003.10.01.19.28.55;	author root;	state Exp;
branches;
next	1.9;

1.9
date	2003.10.01.19.24.04;	author root;	state Exp;
branches;
next	1.8;

1.8
date	2003.08.21.03.26.19;	author root;	state Exp;
branches;
next	1.7;

1.7
date	2003.08.21.02.49.08;	author root;	state Exp;
branches;
next	1.6;

1.6
date	2003.08.21.02.42.11;	author root;	state Exp;
branches;
next	1.5;

1.5
date	2003.08.20.06.23.07;	author root;	state Exp;
branches;
next	1.4;

1.4
date	2003.08.20.06.14.30;	author root;	state Exp;
branches;
next	1.3;

1.3
date	2003.08.20.01.21.01;	author root;	state Exp;
branches;
next	1.2;

1.2
date	2003.08.20.01.10.19;	author root;	state Exp;
branches;
next	1.1;

1.1
date	2003.08.20.01.02.26;	author root;	state Exp;
branches;
next	;


desc
@@


1.10
log
@*** empty log message ***
@
text
@#!/usr/bin/perl -w

use strict;
use File::Copy;
use Config::IniFiles;
use Lunar::Restrict;
use Lunar::Users;

# $Id: genProcmail.pl,v 1.9 2003/10/01 19:24:04 root Exp root $

# Limit where script is ran
&limitHost('host');

my $revision = '1.0';
my $deny = '/usr/local/ref/email/procmail/procmail.deny';
my $cfgFile = '/etc/user-options/users.conf';
my $sa = 'spamassassin';
my $proc = '.procmail.' . $sa;

my %userList = &getUsers('customers');

my $cfg = Config::IniFiles->new(
                -file => $cfgFile,
                -nocase => 1,
                );

for my $user(keys %userList) {
  if (-d $userList{$user}{'dir'}) {
    &makeProcmail($user,$userList{$user}{'dir'});
  } else {
    next;
  }
}

sub makeProcmail {
  my $user = shift;
  my $home = shift;
  open(FH,">$home/.procmailrc")
    or die "Can't open $home/.procmailrc : $!\n";

print FH <<CFG;
# Procmailrc $revision 
LOGFILE=\$HOME/.procmail.log
TIMEOUT=60
INCLUDERC=.procmail.allow
INCLUDERC=.procmail.deny
INCLUDERC=.procmail.spamassassin
CFG
  
  close(FH);

  ## create icb allow file placeholder 
  if ( !-e "$home/.procmail.allow" ) {
    open(FH,">$home/.procmail.allow")
      or die "Can't open $home/.procmail.allow : $!\n";
    print FH "\#\# Placeholder for allow statements";
    close(FH);
  }

  ## create global denies
  copy($deny,"$home/.procmail.deny")
    or die "Can't copy deny to $home/.procmail.deny\n";

  ## create the spamassassin include placeholder
  &genSAFile($user);
}

sub genSAFile {
  my $user = shift;
  if (!$cfg->val($user,$sa)) {
    open(FH,">$userList{$user}{'dir'}/$proc")
      or die "Can't open $userList{$user}{'dir'}/$proc : $!\n";
    print FH "\#\# Placeholder for spamassassin";
    close(FH);

  } elsif ($cfg->val($user,$sa) eq 'on') {
    open(FH,">$userList{$user}{'dir'}/$proc")
      or die "Can't open $userList{$user}{'dir'}/$proc : $!\n";

print FH <<SA;
:0fw: spamassassin.lock
| /usr/bin/spamassassin

# Mails with a score of 15 or higher are almost certainly spam (with 0.05%
# false positives according to rules/STATISTICS.txt). Let's put them in a
# different mbox. (This one is optional.)
:0:
* ^X-Spam-Level: \\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*
/dev/null
SA
 
    close(FH);
  } else {
    open(FH,">$userList{$user}{'dir'}/$proc")
      or die "Can't open $userList{$user}{'dir'}/$proc : $!\n";
    print FH "\#\# Placeholder for spamassassin";
    close(FH);
  }
}
@


1.9
log
@Added a tag to get rid of high scoring spamassassin spam
@
text
@d9 1
a9 1
# $Id: genProcmail.pl,v 1.8 2003/08/21 03:26:19 root Exp root $
d88 1
a88 1
* ^X-Spam-Level: \*\*\*\*\*\*\*\*\*\*\*\*\*\*\*
@


1.8
log
@*** empty log message ***
@
text
@d9 1
a9 1
# $Id: genProcmail.pl,v 1.7 2003/08/21 02:49:08 root Exp root $
d83 7
@


1.7
log
@*** empty log message ***
@
text
@d9 1
a9 1
# $Id: genProcmail.pl,v 1.6 2003/08/21 02:42:11 root Exp root $
d70 7
a76 1
  if ($cfg->val($user,$sa) eq 'on') {
@


1.6
log
@Added creation of genuine sa files
@
text
@d9 1
a9 1
# $Id: genProcmail.pl,v 1.5 2003/08/20 06:23:07 root Exp root $
d71 2
a72 2
    open(FH,">$userlist{$user}{'dir'}/$proc")
      or die "Can't open $userlist{$user}{'dir'}/$proc : $!\n";
d81 2
a82 2
    open(FH,">$userlist{$user}{'dir'}/$proc")
      or die "Can't open $userlist{$user}{'dir'}/$proc : $!\n";
@


1.5
log
@removed old cruft
@
text
@d5 1
d9 1
a9 3
# $Id: genProcmail.pl,v 1.4 2003/08/20 06:14:30 root Exp root $

# Create a .procmailrc for all non-specific users
d12 1
a12 1
&limitHost('host|name2');
d14 1
a14 1
my $revision = '1';
d16 3
d22 5
d65 18
a82 3
  if ( !-e "$home/.procmail.spamassassin" ) {
    open(FH,">$home/.procmail.spamassassin")
      or die "Can't open $home/.procmail.spamassassin : $!\n";
@


1.4
log
@changed to using Lunar::Users
@
text
@d8 1
a8 1
# $Id: genProcmail.pl,v 1.3 2003/08/20 01:21:01 root Exp root $
a15 1
my $passwd = '/etc/passwd';
a16 3
open(FH,$passwd) or die "Can't open $passwd : $!\n";
my @@userList = <FH>;
close(FH);
@


1.3
log
@*** empty log message ***
@
text
@d4 1
d6 1
a6 1
use File::Copy;
d8 1
a8 1
# $Id: genProcmail.pl,v 1.2 2003/08/20 01:10:19 root Exp root $
d22 5
a26 8
for my $line(@@userList) {
  my $user = (split(/:/,$line))[0];
  my $home = (split(/:/,$line))[5]; 
  my $uid  = (split(/:/,$line))[2];
  next if ($uid < 500);
  next if ($user eq 'cmenzes');
  if (-d $home) {
    &makeProcmail($user,$home);
@


1.2
log
@*** empty log message ***
@
text
@d7 1
a7 1
# $Id: genProcmail.pl,v 1.1 2003/08/20 01:02:26 root Exp root $
d40 1
a40 1
print <<FH;
d47 1
a47 1
FH
@


1.1
log
@Initial revision
@
text
@d5 1
d7 1
a7 1
# $Id:$
@
