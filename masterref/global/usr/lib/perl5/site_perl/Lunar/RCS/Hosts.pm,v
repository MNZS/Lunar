head	1.5;
access;
symbols;
locks; strict;
comment	@# @;


1.5
date	2003.08.13.18.07.16;	author root;	state Exp;
branches;
next	1.4;

1.4
date	2003.08.12.15.53.43;	author root;	state Exp;
branches;
next	1.3;

1.3
date	2003.08.12.15.48.51;	author root;	state Exp;
branches;
next	1.2;

1.2
date	2003.08.11.05.16.47;	author root;	state Exp;
branches;
next	1.1;

1.1
date	2003.08.10.23.52.29;	author root;	state Exp;
branches;
next	;


desc
@@


1.5
log
@*** empty log message ***
@
text
@package Lunar::Hosts;

## $Id: Hosts.pm,v 1.4 2003/08/12 15:53:43 root Exp root $

use strict;
use warnings;

BEGIN {
  use Exporter ();
  our ($VERSION, @@ISA, @@EXPORT, @@EXPORT_OK, %EXPORT_TAGS);

  # set the version for version checking
  $VERSION     = 1.00;

  @@ISA         = qw(Exporter);
  @@EXPORT      = qw(
			&getHosts 
  );

  %EXPORT_TAGS = ( );

  @@EXPORT_OK   = @@EXPORT;

}

## Returns a list of Lunar Hosting nodes as well as their attributes
sub getHosts {
  my $subset = shift;

  my $server 		= 'servers';
  my $cisco  		= 'routers';
  my $snmpServer 	= 'Wl7d0w%!';
  my $snmpCisco 	= 'monitor';

  my %servers = (
    	host1 => {
		hardware 	=> $server,
		community 	=> $snmpServer,
		os		=> '7.3',
	},

	host2 => {
		hardware 	=> $server,
		community 	=> $snmpServer,
		os		=> '7.3',
	},
	
	name1 => {
		hardware 	=> $server,
		community 	=> $snmpServer,
		os		=> '7.3',
	},
	
	name2 => {
		hardware 	=> $server,
		community 	=> $snmpServer,
		os		=> '8.0',
	},
  );

  my %cisco = (
	gateway => {
		hardware	=> $cisco,
		community	=> $snmpCisco,
	},

	backbone => {
		hardware	=> $cisco,
		community	=> $snmpCisco,
	}
  ); 

  if ($subset =~ /linux|server|redhat/i) {
    return %servers;
  } elsif ($subset =~ /router|switch|cisco/i) {
    return %cisco;
  } else {
    return (%servers, %cisco);
  }
}

1;
@


1.4
log
@*** empty log message ***
@
text
@d3 1
a3 1
## $Id: Hosts.pm,v 1.3 2003/08/12 15:48:51 root Exp root $
d39 1
d45 1
d51 1
d57 1
@


1.3
log
@new method of calling various groups of hosts
@
text
@d3 1
a3 1
## $Id: Hosts.pm,v 1.2 2003/08/11 05:16:47 root Exp root $
d69 1
a69 1
  if ($subset =~ /linux|server|redhat/) {
d71 1
a71 1
  } elsif ($subset =~ /router|switch|cisco/) {
@


1.2
log
@*** empty log message ***
@
text
@d3 1
a3 1
## $Id: Hosts.pm,v 1.1 2003/08/10 23:52:29 root Exp root $
d28 1
d30 4
a33 2
  my $id = 'servers';
  my $string = 'Wl7d0w%!';
d35 1
a35 1
  my %nodes = (
d37 2
a38 2
		hardware 	=> $id,
		community 	=> $string,
d42 2
a43 2
		hardware 	=> $id,
		community 	=> $string,
d47 2
a48 2
		hardware 	=> $id,
		community 	=> $string,
d52 2
a53 2
		hardware 	=> $id,
		community 	=> $string,
d57 19
a75 1
  return %nodes;
@


1.1
log
@Initial revision
@
text
@d3 1
a3 1
## $Id: Admin.pm,v 1.1 2003/08/10 22:15:34 root Exp $
d28 4
d34 2
d39 2
d44 2
d49 2
@
